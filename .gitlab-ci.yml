image: node:14-slim

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - publish
  - deploy

build:
  stage: build
  script:
    - npm ci
    - npm run build

test:
  stage: test
  dependencies:
    - build
  script:
    - npm run test

outdated:
  stage: test
  dependencies:
    - build
  allow_failure: true
  script:
    - npm outdated

sast:
  stage: test
  dependencies:
    - build

include:
  - template: Security/SAST.gitlab-ci.yml

publish:
  stage: publish
  dependencies:
    - build
  script:
    - npm publish
    - mkdir pack
    - npm pack
    - mv *.tgz pack/
  artifacts:
    name: pack
    paths:
      - pack/

jsdoc:
  stage: publish
  dependencies:
    - build
  script:
    - npm run doc
    - mv out/ public/
  artifacts:
    name: doc
    paths:
      - public/

dmd:
  stage: publish
  dependencies:
    - build
  script:
    - npm run dmd
    - mkdir -p public/
    - mv api.md public/
  artifacts:
    name: dmd
    paths:
      - public/

dockerize:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

pages:
  stage: deploy
  script:
    - echo 'Upload all report'
  artifacts:
    paths:
      - public
